# Database Configuration - Direct connection without pooling
spring.datasource.url=jdbc:postgresql://aws-0-eu-north-1.pooler.supabase.com:5432/postgres?tcpKeepAlive=true&ApplicationName=SpecificSpring
spring.datasource.username=postgres.omiupfslobnjbdrlvbkv
spring.datasource.password=SFqA9LO0S6t0pNNe
spring.datasource.driver-class-name=org.postgresql.Driver

# Explicitly set JDBC URL for Hibernate
jakarta.persistence.jdbc.url=jdbc:postgresql://aws-0-eu-north-1.pooler.supabase.com:5432/postgres?tcpKeepAlive=true&ApplicationName=SpecificSpring
jakarta.persistence.jdbc.user=postgres.omiupfslobnjbdrlvbkv
jakarta.persistence.jdbc.password=SFqA9LO0S6t0pNNe
jakarta.persistence.jdbc.driver=org.postgresql.Driver

# Disable connection pooling entirely
spring.datasource.type=org.springframework.jdbc.datasource.SimpleDriverDataSource
spring.datasource.hikari.auto-commit=true

# JPA Configuration - Minimal with no schema validation
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Disable Hibernate's checks on startup
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
spring.jpa.properties.hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION

# Server configuration
server.port=${PORT:8080}
server.address=0.0.0.0

# Firebase Configuration
firebase.enabled=true
firebase.credentials.path=${FIREBASE_CREDENTIALS_JSON:firebase-credentials.json}

# DeepL API Configuration
deepl.api.key=${DEEPL_API_KEY:your_api_key_for_dev}

# Actuator
management.endpoints.web.exposure.include=health
management.health.db.enabled=false 