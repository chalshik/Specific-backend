# Database Configuration - Using Supabase direct connection
spring.datasource.url=jdbc:postgresql://aws-0-eu-north-1.pooler.supabase.com:5432/postgres
spring.datasource.username=postgres.omiupfslobnjbdrlvbkv
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool configuration (limit connections for Supabase free tier)
spring.datasource.hikari.maximum-pool-size=1
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
# Explicitly setting dialect since JDBC metadata detection is failing
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Connection retry settings
spring.datasource.hikari.initialization-fail-timeout=-1
spring.datasource.hikari.connection-test-query=SELECT 1

# Reduce JPA connection usage
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# Additional properties for better error handling
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.open-in-view=false

# Server configuration
server.port=${PORT:8080}
server.address=0.0.0.0

# Firebase Configuration
firebase.enabled=true
firebase.credentials.path=${FIREBASE_CREDENTIALS_JSON:firebase-credentials.json}

# DeepL API Configuration
deepl.api.key=${DEEPL_API_KEY:your_api_key_for_dev}

# Actuator
management.endpoints.web.exposure.include=health
management.health.db.enabled=true 